//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatosD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductosEntities : DbContext
    {
        public ProductosEntities()
            : base("name=ProductosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<Producto> Productos { get; set; }
    
        public virtual ObjectResult<sp_Ingreso_Producto_Result> sp_Ingreso_Producto(string strNombre_Producto, string strDescripcion_Producto, Nullable<int> strCantidad_Producto, Nullable<decimal> strPrecioxUnidad_Producto, Nullable<int> strId_Categoria)
        {
            var strNombre_ProductoParameter = strNombre_Producto != null ?
                new ObjectParameter("strNombre_Producto", strNombre_Producto) :
                new ObjectParameter("strNombre_Producto", typeof(string));
    
            var strDescripcion_ProductoParameter = strDescripcion_Producto != null ?
                new ObjectParameter("strDescripcion_Producto", strDescripcion_Producto) :
                new ObjectParameter("strDescripcion_Producto", typeof(string));
    
            var strCantidad_ProductoParameter = strCantidad_Producto.HasValue ?
                new ObjectParameter("strCantidad_Producto", strCantidad_Producto) :
                new ObjectParameter("strCantidad_Producto", typeof(int));
    
            var strPrecioxUnidad_ProductoParameter = strPrecioxUnidad_Producto.HasValue ?
                new ObjectParameter("strPrecioxUnidad_Producto", strPrecioxUnidad_Producto) :
                new ObjectParameter("strPrecioxUnidad_Producto", typeof(decimal));
    
            var strId_CategoriaParameter = strId_Categoria.HasValue ?
                new ObjectParameter("strId_Categoria", strId_Categoria) :
                new ObjectParameter("strId_Categoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Ingreso_Producto_Result>("sp_Ingreso_Producto", strNombre_ProductoParameter, strDescripcion_ProductoParameter, strCantidad_ProductoParameter, strPrecioxUnidad_ProductoParameter, strId_CategoriaParameter);
        }
    
        public virtual ObjectResult<sp_listar_productos_Result> sp_listar_productos(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("Filtro", filtro) :
                new ObjectParameter("Filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_productos_Result>("sp_listar_productos", filtroParameter);
        }
    
        public virtual ObjectResult<sp_Actualizar_Producto_Result> sp_Actualizar_Producto(Nullable<int> intId_Producto, string strNombre_Producto, string strDescripcion_Producto, Nullable<int> intCantidad_Producto, Nullable<decimal> decPrecioxUnidad_Producto, Nullable<int> intId_Categoria)
        {
            var intId_ProductoParameter = intId_Producto.HasValue ?
                new ObjectParameter("IntId_Producto", intId_Producto) :
                new ObjectParameter("IntId_Producto", typeof(int));
    
            var strNombre_ProductoParameter = strNombre_Producto != null ?
                new ObjectParameter("strNombre_Producto", strNombre_Producto) :
                new ObjectParameter("strNombre_Producto", typeof(string));
    
            var strDescripcion_ProductoParameter = strDescripcion_Producto != null ?
                new ObjectParameter("strDescripcion_Producto", strDescripcion_Producto) :
                new ObjectParameter("strDescripcion_Producto", typeof(string));
    
            var intCantidad_ProductoParameter = intCantidad_Producto.HasValue ?
                new ObjectParameter("IntCantidad_Producto", intCantidad_Producto) :
                new ObjectParameter("IntCantidad_Producto", typeof(int));
    
            var decPrecioxUnidad_ProductoParameter = decPrecioxUnidad_Producto.HasValue ?
                new ObjectParameter("DecPrecioxUnidad_Producto", decPrecioxUnidad_Producto) :
                new ObjectParameter("DecPrecioxUnidad_Producto", typeof(decimal));
    
            var intId_CategoriaParameter = intId_Categoria.HasValue ?
                new ObjectParameter("IntId_Categoria", intId_Categoria) :
                new ObjectParameter("IntId_Categoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Actualizar_Producto_Result>("sp_Actualizar_Producto", intId_ProductoParameter, strNombre_ProductoParameter, strDescripcion_ProductoParameter, intCantidad_ProductoParameter, decPrecioxUnidad_ProductoParameter, intId_CategoriaParameter);
        }
    }
}
